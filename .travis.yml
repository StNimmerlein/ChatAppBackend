language: csharp
mono: none
dotnet: 2.1.502
dist: trusty
sudo: false
    
branches:
  only:
    - master

env:
  global:
    - PATH=$HOME/.local/bin:$PATH
    - PROJECTS_TO_DEPLOY="ConnectWebSocket DeleteMessage DisconnectWebSocket GetMessages OnDBMessageChange PostMessage"

before_install:
  - dotnet restore
  - pip install --user awscli
  - dotnet tool install Amazon.Lambda.Tools --tool-path lambda

jobs:
  include:
    - stage: build and deploy
      script:
        - if [ "$STACK" == "" ]; then echo "You must provide a stack name as environment variable STACK."; exit 1; fi
        - if [ "$AUTH_STACK" == "" ]; then echo "You must provide an auth stack name as environment variable AUTH_STACK."; exit 1; fi
        - if [ "$BUCKET" == "" ]; then echo "You must provide a code bucket as environment variable BUCKET."; exit 1; fi
        - for i in $PROJECTS_TO_DEPLOY; do cd $i/src/$i; ../../../lambda/dotnet-lambda package; mv bin/Release/netcoreapp2.1/$i.zip ../../..; cd ../../..; done
        - timestamp=$(date +%Y%m%d%H%M%S)
        - cat template.yml | sed "s/\$timestamp/$timestamp/g" > modified.yml
        - aws cloudformation package --s3-bucket $BUCKET --output-template-file packaged.yml --template-file modified.yml
        - aws cloudformation deploy --template-file packaged.yml --stack-name $STACK --parameter-overrides AccessKey=$AWS_ACCESS_KEY_ID SecretKey=$AWS_SECRET_ACCESS_KEY
        - cd Auth
        - aws cloudformation package --template-file auth.yml --s3-bucket $BUCKET --output-template-file packaged.yml
        - aws cloudformation deploy --template-file packaged.yml --stack-name $AUTH_STACK --parameter-overrides UserPoolName=ChatUserPool UserPoolDomainName=$AUTH_DOMAIN --capabilities CAPABILITY_NAMED_IAM